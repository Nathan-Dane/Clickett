<Window x:Class="Clickett.MainWindow" Name="window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        MouseLeftButtonDown="WindowDrag" PreviewKeyDown="KeyDown" Closed="OnExit" Topmost="true"
        Background="Transparent" AllowsTransparency="true" WindowStyle="None" ResizeMode="NoResize"
        Title="Clickett" SizeToContent="Height" HorizontalAlignment="Stretch" Width="600" Icon="/res/iconround.png" RenderTransformOrigin="0.5,0.5">

    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Duration="00:00:00.6" Storyboard.TargetProperty="Opacity" From="0" To="1"/>
                    <DoubleAnimation Duration="00:00:01.4" Storyboard.TargetName="WindowScale" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" From="0.96" To="1">
                        <DoubleAnimation.EasingFunction>
                            <QuarticEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Duration="00:00:01.4" Storyboard.TargetName="WindowScale" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" From="0.96" To="1">
                        <DoubleAnimation.EasingFunction>
                            <QuarticEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
    <Window.RenderTransform>
        <ScaleTransform x:Name="WindowScale" 
          ScaleX="1" ScaleY="1"  />
    </Window.RenderTransform>
    <Window.Resources>
        <Sys:String x:Key="BoxBackCol">#CC5A5E5F</Sys:String>
        <Sys:String x:Key="FGCol1">#EED7DBDB</Sys:String>
        <Sys:String x:Key="FGCol2">#D5BBBBBB</Sys:String>
        <Sys:String x:Key="FGCol3">#FFEEF5F5</Sys:String>
        <Sys:String x:Key="InBacCol">#F1757575</Sys:String>
        <Sys:String x:Key="InBorCol">#F17F7F7F</Sys:String>

        <Sys:Int16 x:Key="MinRad">8</Sys:Int16>
        <Sys:Int16 x:Key="MajRad">12</Sys:Int16>
        <Sys:Int16 x:Key="MinBoxHeight">25</Sys:Int16>
        <Sys:Int16 x:Key="MajBoxHeight">40</Sys:Int16>

        <!--Switch Button Style-->
        <Style x:Key="MyButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="0" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.69" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Switch Button Style-->
        <Style x:Key="CustBut" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="0" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Toggle Button Style-->
        <Style x:Key="TogBut" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="0" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="Tans" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Tans"
                                         Storyboard.TargetProperty="ScaleX" To="1.1" Duration="0:0:0.05" AccelerationRatio="0.1" DecelerationRatio="0.9"/>
                                        <DoubleAnimation Storyboard.TargetName="Tans"
                                         Storyboard.TargetProperty="ScaleY" To="1.1" Duration="0:0:0.05" AccelerationRatio="0.1" DecelerationRatio="0.9"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Tans"
                                         Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" AccelerationRatio="0.3" DecelerationRatio="0.7"/>
                                        <DoubleAnimation Storyboard.TargetName="Tans"
                                         Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" AccelerationRatio="0.3" DecelerationRatio="0.7" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Colour Button Style-->
        <Style x:Key="ColourButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="0" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ComboBox Style-->
        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{DynamicResource InBor}" 
              CornerRadius="5" BorderThickness="0,0,0,0" 
              Background="{DynamicResource InBac}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="Transparent" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M 0 0 L 4 4 L 8 0 Z"
            HorizontalAlignment="Center" Fill="{DynamicResource FgCol2}"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Border.Background" TargetName="Border" Value="{DynamicResource InBor}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="{DynamicResource AcCol1}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="{DynamicResource AcCol1}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>

            <Setter Property="ComboBox.ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">

                                    <Grid>
                                        <Border
                                        BorderThickness="0"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="4" Padding="3,0,0,0">
                                            <ContentPresenter/>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource BoxBack}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="4, 0, 0, 0" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="0, 0, 0, 0"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Fade">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="{DynamicResource InBac}" Margin="0, 0, 0, 0"
                        CornerRadius="6" BorderThickness="0,0,0,0" 
                        BorderBrush="{DynamicResource InBac}"/>
                                    <ScrollViewer Margin="2" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="50"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Slider Style-->
        <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border  BorderThickness="0" Background="{DynamicResource InBac}" Height="4" CornerRadius="0,2,2,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True"  BorderThickness="0" Height="4" CornerRadius="2,0,0,2" Background="{DynamicResource AcGrad}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse x:Name="Ellipse" Height="15" Width="15" Fill="{DynamicResource FgCol3}" RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <ScaleTransform x:Name="Tans" ScaleX="1" ScaleY="1"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Tans"
                                         Storyboard.TargetProperty="ScaleX" To="1.15" Duration="0:0:0.05" AccelerationRatio="0.1" DecelerationRatio="0.9"/>
                                        <DoubleAnimation Storyboard.TargetName="Tans"
                                         Storyboard.TargetProperty="ScaleY" To="1.15" Duration="0:0:0.05" AccelerationRatio="0.1" DecelerationRatio="0.9"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Tans"
                                         Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" AccelerationRatio="0.3" DecelerationRatio="0.7"/>
                                        <DoubleAnimation Storyboard.TargetName="Tans"
                                         Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" AccelerationRatio="0.3" DecelerationRatio="0.7" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="Slider"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track"   >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  />
                    </Track.Thumb>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="Horizontal_Slider" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--ScrollViewer Style-->





        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="6"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="0"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="3" Background="{DynamicResource BoxBack}" Opacity="0.5" />
                <RepeatButton/>
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,0,0,0" Background="{DynamicResource AcCol2}" BorderBrush="Transparent" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="6"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="479"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ScrollContentPresenter Grid.Column="0"/>
                            <ScrollBar Grid.Column="1" Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Margin="5,0,5,0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <!--Structure-->
    <Viewbox FocusVisualStyle="{x:Null}">
        <Canvas FocusVisualStyle="{x:Null}" Name="fullCanvas" Width="500" Height="233.198" Opacity="1">
            <Grid FocusVisualStyle="{x:Null}" Width="500" Name="fullGrid" Focusable="True" MouseDown="fullGridFocus">
                <Border FocusVisualStyle="{x:Null}" CornerRadius="{Binding Source={StaticResource MajRad}}" BorderThickness="0" Padding="0,0,0,5" Background="{DynamicResource Back}">
                    <StackPanel>
                        <Grid>
                            <Border Width="220" Background="{DynamicResource AcGrad}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="8,8,0,0" Height="48.8109502794603">
                                <Border.OpacityMask>
                                    <ImageBrush ImageSource="{DynamicResource TitleDrawingImage}" Stretch="Uniform">
                                        <ImageBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterY="0" CenterX="0"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </ImageBrush.RelativeTransform>
                                    </ImageBrush>
                                </Border.OpacityMask>
                            </Border>
                            <Border Width="50" Height="50" CornerRadius="25" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="7,0,0,0" MouseEnter="LogoMouseEnter"  MouseLeave="LogoMouseLeave" Background="#00000000"/>
                            <TextBlock Name="hudText" Foreground="{DynamicResource FgCol2}" Margin="240,20,20,0" Text="" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="13" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" MaxHeight="37" TextAlignment="Center" Opacity="0.69"/>
                        </Grid>
                        <Grid>
                            <!--Config View-->
                            <StackPanel x:Name="confStack" Visibility="visible">
                                <TextBlock x:Name="interText" Foreground="{DynamicResource FgCol2}" Margin="20,5,20,0" Text="Clicks Per Second" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="13"/>
                                <Grid Margin="0,1,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="69*"/>
                                        <ColumnDefinition Width="431*"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="interBor" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="5,0,65,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}" Grid.ColumnSpan="2">
                                        <Grid>
                                            <Grid x:Name="cpsGrid" Visibility="Hidden">
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="1" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="13,0,0,0"/>
                                                <Button x:Name="cpsWarn" Style="{StaticResource TogBut}" MouseEnter="WarnMouseEnter" MouseLeave="WarnMouseLeave" Click="WarnLink"  Height="15" Width="15" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="300,-19,0,0">
                                                    <Border x:Name="cpsWarnBack" Background="{DynamicResource FgCol1}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="15" Height="15" Opacity="0.69" RenderOptions.BitmapScalingMode="HighQuality">
                                                        <Border.OpacityMask>
                                                            <ImageBrush ImageSource="{DynamicResource Warning1DrawingImage}" Stretch="Uniform">
                                                                <ImageBrush.RelativeTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform CenterY="0" CenterX="0"/>
                                                                        <TranslateTransform X="0" Y="0"/>
                                                                    </TransformGroup>
                                                                </ImageBrush.RelativeTransform>
                                                            </ImageBrush>
                                                        </Border.OpacityMask>
                                                    </Border>
                                                </Button>
                                                <Slider x:Name="cpsSlid" ValueChanged="cpsChange" VerticalAlignment="Center" Margin="30,0,30,0" BorderThickness="0" Style="{StaticResource Horizontal_Slider}" Minimum="1" Maximum="69" Value="4" TickFrequency="1" IsSnapToTickEnabled="True" IsTabStop="False"/>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="69" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,6,0"/>
                                            </Grid>
                                            <Grid x:Name="threadsGrid" Visibility="Visible">
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="1" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="13,0,0,0"/>
                                                <Button x:Name="threadsWarn" Style="{StaticResource TogBut}" MouseEnter="RWarnMouseEnter" MouseLeave="RWarnMouseLeave" Click="WarnLink"  Height="15" Width="15" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="300,-19,0,0">
                                                    <Border x:Name="threadsWarnBack" Background="{DynamicResource FgCol1}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="15" Height="15" Opacity="0.69" RenderOptions.BitmapScalingMode="HighQuality">
                                                        <Border.OpacityMask>
                                                            <ImageBrush ImageSource="{DynamicResource Warning2DrawingImage}" Stretch="Uniform">
                                                                <ImageBrush.RelativeTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform CenterY="0" CenterX="0"/>
                                                                        <TranslateTransform X="0" Y="0"/>
                                                                    </TransformGroup>
                                                                </ImageBrush.RelativeTransform>
                                                            </ImageBrush>
                                                        </Border.OpacityMask>
                                                    </Border>
                                                </Button>
                                                <Slider x:Name="threadsSlid" ValueChanged="ThreadsChange" VerticalAlignment="Center" Margin="30,0,30,0" BorderThickness="0" Style="{StaticResource Horizontal_Slider}" Minimum="1" Maximum="20" Value="5" TickFrequency="1" IsSnapToTickEnabled="True" IsTabStop="False"/>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="20" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,6,0"/>
                                            </Grid>
                                            <Grid x:Name="interGrid" Visibility="Hidden">
                                                <!--Minutes Input-->
                                                <TextBox x:Name="minutesInput" Background="{DynamicResource InBac}" BorderBrush="{DynamicResource InBor}" Foreground="{DynamicResource FgCol3}" LostFocus="HandleTextChange" TextChanged="HandleInterTextChange" HorizontalAlignment="Left" BorderThickness="2" Margin="65,3,0,3" Width="75" FontFamily="./#LEMON MILK Pro FTR Regular" Padding="2,0,0,0" PreviewTextInput="NumberValidationTextBox" IsTabStop="False">
                                                    <TextBox.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="5"/>
                                                        </Style>
                                                    </TextBox.Resources>
                                                </TextBox>
                                                <TextBlock LostFocus="HandleTextChange" Foreground="{DynamicResource FgCol1}" Text="Minutes" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                                <!--Seconds Input-->
                                                <TextBox x:Name="secondsInput" Background="{DynamicResource InBac}" BorderBrush="{DynamicResource InBor}" Foreground="{DynamicResource FgCol3}" LostFocus="HandleTextChange" TextChanged="HandleInterTextChange" HorizontalAlignment="Center" BorderThickness="2" Margin="75,3,0,3" Width="75" FontFamily="./#LEMON MILK Pro FTR Regular" Padding="2,0,0,0" PreviewTextInput="NumberValidationTextBox" IsTabStop="False">
                                                    <TextBox.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="5"/>
                                                        </Style>
                                                    </TextBox.Resources>
                                                </TextBox>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="Seconds" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,70,0"/>
                                                <!--Milliseconds Input-->
                                                <TextBox x:Name="millisInput" Background="{DynamicResource InBac}" BorderBrush="{DynamicResource InBor}" Foreground="{DynamicResource FgCol3}" LostFocus="HandleTextChange" TextChanged="HandleInterTextChange" HorizontalAlignment="Right" BorderThickness="2" Margin="0,3,3,3" Width="75" FontFamily="./#LEMON MILK Pro FTR Regular" Padding="2,0,0,0" PreviewTextInput="NumberValidationTextBox" IsTabStop="False" >
                                                    <TextBox.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="5"/>
                                                        </Style>
                                                    </TextBox.Resources>
                                                </TextBox>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="Millis" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,83,0"/>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                    <Grid x:Name="rocketSwapGrid" Margin="440,0,0,0" HorizontalAlignment="Left" Width="25" Grid.ColumnSpan="2">
                                        <Button x:Name="rocketSwap" Click="RocketSwap" MouseEnter="RocketMouseEnter" MouseLeave="RocketMouseLeave" Background="{DynamicResource BoxBack}" HorizontalAlignment="Left" BorderThickness="0" IsTabStop="False" Focusable="False" Grid.Column="1">
                                            <Button.Resources>
                                                <Style TargetType="{x:Type Border}">
                                                    <Setter Property="CornerRadius" Value="{Binding Source={StaticResource MinRad}}"/>
                                                </Style>
                                            </Button.Resources>
                                            <Button.Style>
                                                <StaticResource ResourceKey="TogBut"/>
                                            </Button.Style>
                                            <Button.Height>
                                                <Binding Source="{StaticResource MinBoxHeight}"/>
                                            </Button.Height>
                                            <Button.Width>
                                                <Binding Source="{StaticResource MinBoxHeight}"/>
                                            </Button.Width>
                                            <Border x:Name="rocketBorder" Background="{DynamicResource FgCol2}" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" Width="20" Height="20" CornerRadius="0,0,0,0">
                                                <Border.OpacityMask>
                                                    <ImageBrush x:Name="rocketIconDis" ImageSource="{DynamicResource rocket1DrawingImage}" Stretch="Uniform">
                                                        <ImageBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterY="0" CenterX="0"/>
                                                                <TranslateTransform X="0" Y="-0.09"/>
                                                            </TransformGroup>
                                                        </ImageBrush.RelativeTransform>
                                                    </ImageBrush>
                                                </Border.OpacityMask>
                                            </Border>
                                        </Button>
                                    </Grid>
                                    <Grid x:Name="swapButtGrid" HorizontalAlignment="Right" Width="25" Grid.ColumnSpan="2" Margin="0,0,5,0">
                                        <Button x:Name="swapButt"  Click="InterTypeSwap" Background="{DynamicResource BoxBack}" HorizontalAlignment="Left" BorderThickness="0" IsTabStop="False" Focusable="False" Grid.Column="1">
                                        <Button.Resources>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="CornerRadius" Value="{Binding Source={StaticResource MinRad}}"/>
                                            </Style>
                                        </Button.Resources>
                                        <Button.Style>
                                            <StaticResource ResourceKey="TogBut"/>
                                        </Button.Style>
                                        <Button.Height>
                                            <Binding Source="{StaticResource MinBoxHeight}"/>
                                        </Button.Height>
                                        <Button.Width>
                                            <Binding Source="{StaticResource MinBoxHeight}"/>
                                        </Button.Width>
                                        <Border x:Name="swapBorder" Background="{DynamicResource AcCol2}" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" Width="20" Height="20" CornerRadius="0,0,0,0">
                                            <Border.OpacityMask>
                                                <ImageBrush ImageSource="{DynamicResource swapDrawingImage}" Stretch="Uniform">
                                                    <ImageBrush.RelativeTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform CenterY="0" CenterX="0"/>
                                                            <TranslateTransform X="0" Y="-0.1"/>
                                                        </TransformGroup>
                                                    </ImageBrush.RelativeTransform>
                                                </ImageBrush>
                                            </Border.OpacityMask>
                                        </Border>
                                    </Button>
                                    </Grid>
                                    
                                </Grid>
                                <Grid x:Name="optionsTitGrid">
                                    <Button x:Name="optionsTit" BorderThickness="0" Click="ToggleExOp" Style="{StaticResource MyButton}" Margin="15,3,20,0" Width="75" HorizontalContentAlignment="Stretch" HorizontalAlignment="Left" Background="Transparent">
                                        <Grid>
                                            <TextBlock Foreground="{DynamicResource FgCol2}" Text="Options" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="13" HorizontalAlignment="Left" Margin="4,0,0,0"/>
                                            <Border x:Name="OptionsArrow" Background="{DynamicResource FgCol1}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="15" Height="15" Opacity="0.69" RenderOptions.BitmapScalingMode="HighQuality" Margin="58,0,0,0" RenderTransformOrigin="0.5,0.5">
                                                <Border.RenderTransform>
                                                    <RotateTransform x:Name="ExOpRot" Angle="0" />
                                                </Border.RenderTransform>
                                                <Border.OpacityMask>
                                                    <ImageBrush ImageSource="{DynamicResource DnArrDrawingImage}" Stretch="Uniform">
                                                        <ImageBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterY="0" CenterX="0"/>
                                                                <TranslateTransform X="0" Y="-0.1"/>
                                                            </TransformGroup>
                                                        </ImageBrush.RelativeTransform>
                                                    </ImageBrush>
                                                </Border.OpacityMask>
                                            </Border>
                                        </Grid>
                                    </Button>
                                </Grid>
                                <!--TextBlock Foreground="{DynamicResource FgCol2}" Margin="20,3,20,0" Text="Options" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="13"/-->
                                <Grid Margin="0,1,0,0">
                                    <Border x:Name="locBorder" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="5,0,210,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}" HorizontalAlignment="Stretch">
                                        <Grid>
                                            <TextBlock x:Name="locText" Foreground="{DynamicResource FgCol1}" Text="Location" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0,8,0"/>
                                            <Grid x:Name="locGrid">
                                                <TextBlock Foreground="{DynamicResource FgCol2}" Text="x" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,137,2"/>
                                                <TextBox x:Name="xPosInput" Background="{DynamicResource InBac}" BorderBrush="{DynamicResource InBor}" Foreground="{DynamicResource FgCol3}" LostFocus="HandleLocTextChange" TextChanged="HandleInterTextChange" HorizontalAlignment="Right" BorderThickness="2" Margin="0,3,89,3" Width="44" FontFamily="./#LEMON MILK Pro FTR Regular" Padding="2,0,0,0" PreviewTextInput="NumberValidationTextBox" IsTabStop="False" >
                                                    <TextBox.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="5"/>
                                                        </Style>
                                                    </TextBox.Resources>
                                                </TextBox>
                                                <TextBlock Foreground="{DynamicResource FgCol2}" Text="y" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,73,2"/>
                                                <TextBox x:Name="yPosInput" Background="{DynamicResource InBac}" BorderBrush="{DynamicResource InBor}" Foreground="{DynamicResource FgCol3}" LostFocus="HandleLocTextChange" TextChanged="HandleInterTextChange" HorizontalAlignment="Right" BorderThickness="2" Margin="0,3,25,3" Width="44" FontFamily="./#LEMON MILK Pro FTR Regular" Padding="2,0,0,0" PreviewTextInput="NumberValidationTextBox" IsTabStop="False" >
                                                    <TextBox.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="5"/>
                                                        </Style>
                                                    </TextBox.Resources>
                                                </TextBox>
                                                <Button Background="AntiqueWhite" x:Name="LocBut" HorizontalAlignment="Right" Width="15" Height="15" VerticalAlignment="Center" Margin="0,0,5,0" Click="ToggleLoc" IsTabStop="False">
                                                    <Button.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="20"/>
                                                        </Style>
                                                    </Button.Resources>
                                                    <Button.Style>
                                                        <StaticResource ResourceKey="TogBut"/>
                                                    </Button.Style>
                                                </Button>
                                            </Grid>
                                            <Button x:Name="locSetButt" Click="SetLoc" Background="{DynamicResource AcGrad}" HorizontalAlignment="Right" BorderThickness="0" Margin="0,3,153,3" Width="40" FontSize="8" IsTabStop="False" Focusable="False">
                                                <Button.Resources>
                                                    <Style TargetType="{x:Type Border}">
                                                        <Setter Property="CornerRadius" Value="5"/>
                                                    </Style>
                                                </Button.Resources>
                                                <Button.Style>
                                                    <StaticResource ResourceKey="MyButton"/>
                                                </Button.Style>
                                                <TextBlock x:Name="locSetButtText" Text="Set" FontFamily="./#LEMON MILK Pro FTR Regular" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource GradFG}" FontSize="14"/>
                                            </Button>
                                        </Grid>
                                    </Border>
                                    <Border x:Name="modeBor" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="5,0,5,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}" HorizontalAlignment="Right" Width="200">
                                        <Grid>
                                            <Grid x:Name="burstGrid">
                                                <TextBox x:Name="burstCountInput" Background="{DynamicResource InBac}" BorderBrush="{DynamicResource InBor}" Foreground="{DynamicResource FgCol3}" LostFocus="ChangeBurstCount" TextChanged="HandleInterTextChange" HorizontalAlignment="Right" BorderThickness="2" Margin="0,3,85,3" Width="40" FontFamily="./#LEMON MILK Pro FTR Regular" Padding="2,0,0,0" PreviewTextInput="NumberValidationTextBox" IsTabStop="False" >
                                                    <TextBox.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="5"/>
                                                        </Style>
                                                    </TextBox.Resources>
                                                </TextBox>
                                            </Grid>
                                            <TextBlock Foreground="{DynamicResource FgCol1}" Text="Mode" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0,0,0"/>
                                            <ComboBox x:Name="modeSel" SelectionChanged="ModeChange" Height="19" HorizontalAlignment="Right" SelectedIndex="2"  Margin="0,0,3,0" Style="{StaticResource ComboBoxFlatStyle}" Width="79" Background="{DynamicResource InBac}" BorderBrush="{DynamicResource InBor}" FontFamily="./#LEMON MILK Pro FTR Regular" Foreground="{DynamicResource FgCol3}" >
                                                <ComboBoxItem Content="Burst"/>
                                                <ComboBoxItem Content="Toggle"/>
                                                <ComboBoxItem Content="Hold"/>
                                            </ComboBox>
                                        </Grid>
                                    </Border>
                                </Grid>
                                <Grid x:Name="exOptions" Margin="0,0,0,0" Visibility="Collapsed">
                                    <Border x:Name="ProfBorder" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="5,5,210,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}" HorizontalAlignment="Stretch">
                                        <Grid>
                                            <TextBlock x:Name="FrofText" Foreground="{DynamicResource FgCol2}" Text="Coming Soon" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,0,8,0"/>
                                        </Grid>
                                    </Border>
                                    <Border x:Name="jitBorder" MouseEnter="JitterMouseEnter" MouseLeave="JitterMouseLeave" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="5,5,132.5,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}" HorizontalAlignment="Right" Width="72.5">
                                        <Grid>
                                            <TextBlock Foreground="{DynamicResource FgCol1}" Text="Jitter" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0,8,0"/>
                                            <Button Background="AntiqueWhite" x:Name="jitBut" HorizontalAlignment="Right" Width="15" Height="15" VerticalAlignment="Center" Margin="0,0,5,0" Click="ToggleJit" IsTabStop="False">
                                                <Button.Resources>
                                                    <Style TargetType="{x:Type Border}">
                                                        <Setter Property="CornerRadius" Value="20"/>
                                                    </Style>
                                                </Button.Resources>
                                                <Button.Style>
                                                    <StaticResource ResourceKey="TogBut"/>
                                                </Button.Style>
                                            </Button>
                                        </Grid>
                                    </Border>
                                    <Border x:Name="douBorder" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="5,5,5,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}" HorizontalAlignment="Right" Width="122.5">
                                        <Grid>
                                            <TextBlock Foreground="{DynamicResource FgCol1}" Text="Double Click" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0,8,0"/>
                                            <Button Background="AntiqueWhite" x:Name="douBut" HorizontalAlignment="Right" Width="15" Height="15" VerticalAlignment="Center" Margin="0,0,5,0" Click="ToggleDou" IsTabStop="False">
                                                <Button.Resources>
                                                    <Style TargetType="{x:Type Border}">
                                                        <Setter Property="CornerRadius" Value="20"/>
                                                    </Style>
                                                </Button.Resources>
                                                <Button.Style>
                                                    <StaticResource ResourceKey="TogBut"/>
                                                </Button.Style>
                                            </Button>
                                        </Grid>
                                    </Border>
                                </Grid>
                                <Grid Margin="0,5,0,0">
                                    <Border x:Name="trigBor" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="5,0,210,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}" HorizontalAlignment="Stretch">
                                        <Grid>
                                            <TextBlock x:Name="trigText" Foreground="{DynamicResource FgCol1}" Text="Trigger" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0,8,0"/>
                                            <Border x:Name="trigBorder" HorizontalAlignment="Left" BorderThickness="0" Margin="92,3,0,3" Width="147" CornerRadius="5" Background="{DynamicResource InBac}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" MouseEnter="HotMouseEnter" MouseLeave="HotMouseLeave">
                                                <TextBlock x:Name="triggerDis" Text="F" FontFamily="./#LEMON MILK Pro FTR Regular" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource FgCol1}" FontSize="14" Opacity="0.8" MaxWidth="143" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
                                            </Border>
                                            <Button x:Name="trigSet" Click="NewTrigger" Background="{DynamicResource AcGrad}" HorizontalAlignment="Right" BorderThickness="0" Margin="0,3,3,3" Width="40" FontSize="8" IsTabStop="False" Focusable="False">
                                                <Button.Resources>
                                                    <Style TargetType="{x:Type Border}">
                                                        <Setter Property="CornerRadius" Value="5"/>
                                                    </Style>
                                                </Button.Resources>
                                                <Button.Style>
                                                    <StaticResource ResourceKey="MyButton"/>
                                                </Button.Style>
                                                <TextBlock x:Name="trigSetText" Text="Set" FontFamily="./#LEMON MILK Pro FTR Regular" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource GradFG}" FontSize="14"/>
                                            </Button>
                                        </Grid>
                                    </Border>
                                    <Border x:Name="clickBor" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="5,0,5,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}" HorizontalAlignment="Right" Width="200">
                                        <Grid>
                                            <TextBlock Foreground="{DynamicResource FgCol1}" Text="Click" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0,0,0"/>
                                            <Border>
                                                <ComboBox x:Name="clickSel" SelectionChanged="CliclChange" Height="19" HorizontalAlignment="Right" SelectedIndex="0"  Margin="0,2,3,2" Style="{StaticResource ComboBoxFlatStyle}" Width="123" Background="{DynamicResource InBac}" BorderBrush="{DynamicResource InBor}" FontFamily="./#LEMON MILK Pro FTR Regular" Foreground="{DynamicResource FgCol3}" IsTabStop="False" >
                                                    <ComboBoxItem Content="Left Click"/>
                                                    <ComboBoxItem Content="Middle Click"/>
                                                    <ComboBoxItem Content="Right Click"/>
                                                </ComboBox>
                                            </Border>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </StackPanel>
                            <!--Settings View-->
                            <Grid x:Name="settGrid">
                                <ScrollViewer Visibility="Collapsed" Height="121.387" x:Name="SettView" Margin="5,5,0,0" Style="{Binding Source={StaticResource FavsScrollViewer}}" >
                                    <!--Height="121.386666666667"-->
                                    <StackPanel Margin="0,0,0,0">
                                        <Grid>
                                            <TextBlock x:Name="uiScaleText" Foreground="{DynamicResource FgCol2}" Margin="15,0,20,0" Text="UI Scale - 100%" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="13"/>
                                            <TextBlock Foreground="{DynamicResource AcCol2}" Margin="15,0,10,0" Text="{Binding AssemblyVersion}" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="13" HorizontalAlignment="Right" Opacity="0.6"/>
                                        </Grid>
                                        <Border CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="0,1,0,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}">
                                            <Grid>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="50" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                <Slider x:Name="uiScaleSlid" ValueChanged="ScaleSliderChange" Thumb.DragCompleted="ScaleChange" VerticalAlignment="Center" Margin="35,0,40,0" BorderThickness="0" Style="{StaticResource Horizontal_Slider}" Minimum="50" Maximum="200" Value="4" TickFrequency="1" IsSnapToTickEnabled="True" IsTabStop="False"/>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="200" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,6,0"/>
                                            </Grid>
                                        </Border>
                                        <Border CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="0,5,0,0" Height="42" Background="{DynamicResource BoxBack}">
                                            <Grid>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="Theme" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                <StackPanel Orientation="Horizontal" Margin="5,0,5,0" HorizontalAlignment="Right">
                                                    <Button Name="DefaultThemeBut" Background="#061010" Style="{StaticResource TogBut}" Click="SetTheme" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5">
                                                        <Button.Resources>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="CornerRadius" Value="16"/>
                                                            </Style>
                                                        </Button.Resources>

                                                        <Border Background="#FF45B4B4" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                                    </Button>
                                                    <Button Name="DefaultLightThemeBut" Background="#F8FFFF" Style="{StaticResource TogBut}" Click="SetTheme" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0">
                                                        <Button.Resources>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="CornerRadius" Value="16"/>
                                                            </Style>
                                                        </Button.Resources>
                                                        <Border Background="#FF45B4B4" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                                    </Button>
                                                    <Button Name="ColdThemeBut" Background="#22272c" Style="{StaticResource TogBut}" Click="SetTheme" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0">
                                                        <Button.Resources>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="CornerRadius" Value="16"/>
                                                            </Style>
                                                        </Button.Resources>
                                                        <Border Background="#fcfbf8" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                                    </Button>
                                                    <Button Name="GreenThemeBut" Background="#030303" Style="{StaticResource TogBut}" Click="SetTheme" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0">
                                                        <Button.Resources>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="CornerRadius" Value="16"/>
                                                            </Style>
                                                        </Button.Resources>
                                                        <Border Background="#FF16D419" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                                    </Button>
                                                    <Button Name="DiscordThemeBut" Background="#2f3136" Style="{StaticResource TogBut}" Click="SetTheme" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0">
                                                        <Button.Resources>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="CornerRadius" Value="16"/>
                                                            </Style>
                                                        </Button.Resources>
                                                        <Image Source="res/Discord.png" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                    </Button>
                                                    <Button Background="{DynamicResource Back}" Style="{StaticResource ColourButton}" Cursor="Arrow" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0" Opacity="0.3">
                                                        <Button.Resources>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="CornerRadius" Value="16"/>
                                                            </Style>
                                                        </Button.Resources>
                                                        <Border Background="{DynamicResource BoxBack}" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                                    </Button>
                                                    <Button Background="{DynamicResource Back}" Style="{StaticResource ColourButton}" Cursor="Arrow" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0" Opacity="0.25">
                                                        <Button.Resources>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="CornerRadius" Value="16"/>
                                                            </Style>
                                                        </Button.Resources>
                                                        <Border Background="{DynamicResource BoxBack}" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                                    </Button>
                                                    <Button Background="{DynamicResource Back}" Style="{StaticResource ColourButton}" Cursor="Arrow" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0" Opacity="0.2">
                                                        <Button.Resources>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="CornerRadius" Value="16"/>
                                                            </Style>
                                                        </Button.Resources>
                                                        <Border Background="{DynamicResource BoxBack}" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                                    </Button>
                                                    <Button Background="{DynamicResource Back}" Style="{StaticResource ColourButton}" Cursor="Arrow" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0" Opacity="0.15">
                                                        <Button.Resources>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="CornerRadius" Value="16"/>
                                                            </Style>
                                                        </Button.Resources>
                                                        <Border Background="{DynamicResource BoxBack}" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                                    </Button>
                                                    <Button Background="{DynamicResource Back}" Style="{StaticResource ColourButton}" Cursor="Arrow" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0" Opacity="0.1">
                                                        <Button.Resources>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="CornerRadius" Value="16"/>
                                                            </Style>
                                                        </Button.Resources>
                                                        <Border Background="{DynamicResource BoxBack}" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                                    </Button>
                                                </StackPanel>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="More coming soon!" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="314,0,0,0" Opacity="0.5"/>
                                            </Grid>
                                        </Border>
                                        <Border x:Name="animBorder" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="0,5,0,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}">
                                            <Grid>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="Animations" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                <Button Background="AntiqueWhite" x:Name="animButt" HorizontalAlignment="Right" Width="15" Height="15" VerticalAlignment="Center" Margin="0,0,5,0" Click="ToggleAnim" IsTabStop="False">
                                                    <Button.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="20"/>
                                                        </Style>
                                                    </Button.Resources>
                                                    <Button.Style>
                                                        <StaticResource ResourceKey="TogBut"/>
                                                    </Button.Style>
                                                </Button>
                                            </Grid>
                                        </Border>
                                        <TextBlock Foreground="{DynamicResource FgCol2}" Margin="15,3,20,0" Text="Clicking" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="13"/>
                                        <Border x:Name="ctBorder" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="0,1,0,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}">
                                            <Grid>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="Count total clicks" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                <Button x:Name="tcResetButt" Click="TcReset" Background="{DynamicResource AcGrad}" Style="{StaticResource MyButton}" HorizontalAlignment="Left" BorderThickness="0" Margin="150,3,0,3" Width="60" FontSize="8" IsTabStop="False" Focusable="False">
                                                    <Button.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="5"/>
                                                        </Style>
                                                    </Button.Resources>
                                                    <TextBlock Text="Reset" FontFamily="./#LEMON MILK Pro FTR Regular" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource GradFG}" FontSize="14"/>
                                                </Button>
                                                <TextBlock x:Name="totalText" Foreground="{DynamicResource FgCol1}" Text="69420" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,50,0" Opacity="0.69"/>
                                                <Button Background="AntiqueWhite" x:Name="ctButt" HorizontalAlignment="Right" Width="15" Height="15" VerticalAlignment="Center" Margin="0,0,5,0" Click="ToggleCt" IsTabStop="False">
                                                    <Button.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="20"/>
                                                        </Style>
                                                    </Button.Resources>
                                                    <Button.Style>
                                                        <StaticResource ResourceKey="TogBut"/>
                                                    </Button.Style>
                                                </Button>
                                            </Grid>
                                        </Border>
                                        <TextBlock Foreground="{DynamicResource FgCol2}" Margin="15,3,20,0" Text="Panel" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="13"/>
                                        <Border x:Name="aotBorder" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="0,1,0,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}">
                                            <Grid>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="Always on top" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                <Button Background="AntiqueWhite" x:Name="aotButt" HorizontalAlignment="Right" Width="15" Height="15" VerticalAlignment="Center" Margin="0,0,5,0" Click="ToggleAot" IsTabStop="False">
                                                    <Button.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="20"/>
                                                        </Style>
                                                    </Button.Resources>
                                                    <Button.Style>
                                                        <StaticResource ResourceKey="TogBut"/>
                                                    </Button.Style>
                                                </Button>
                                            </Grid>
                                        </Border>
                                        <Border CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="0,5,0,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}">
                                            <Grid>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="Normal Opacity" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" x:Name="nOpText" Text="100%" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,6,0"/>
                                                <Slider x:Name="nOpSlid" ValueChanged="NOpSliderChange" Thumb.DragCompleted="NOpChange" VerticalAlignment="Center" Margin="150,0,50,0" BorderThickness="0" Style="{StaticResource Horizontal_Slider}" Minimum="40" Maximum="100" Value="4" TickFrequency="1" IsSnapToTickEnabled="True" IsTabStop="False"/>
                                            </Grid>
                                        </Border>
                                        <Border CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="0,5,0,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}">
                                            <Grid>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="Clicking Opacity" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" x:Name="cOpText" Text="100%" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,6,0"/>
                                                <Slider x:Name="cOpSlid" ValueChanged="COpSliderChange" Thumb.DragCompleted="COpChange" VerticalAlignment="Center" Margin="150,0,50,0" BorderThickness="0" Style="{StaticResource Horizontal_Slider}" Minimum="0" Maximum="100" Value="4" TickFrequency="1" IsSnapToTickEnabled="True" IsTabStop="False"/>
                                            </Grid>
                                        </Border>
                                        <TextBlock Foreground="{DynamicResource FgCol2}" Margin="15,3,20,0" Text="Windows" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="13"/>
                                        <Border x:Name="startupBorder" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="0,1,0,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}">
                                            <Grid>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="Open on Startup" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                <Button Background="AntiqueWhite" x:Name="startupButt" HorizontalAlignment="Right" Width="15" Height="15" VerticalAlignment="Center" Margin="0,0,5,0" Click="ToggleStartup" IsTabStop="False">
                                                    <Button.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="20"/>
                                                        </Style>
                                                    </Button.Resources>
                                                    <Button.Style>
                                                        <StaticResource ResourceKey="TogBut"/>
                                                    </Button.Style>
                                                </Button>
                                            </Grid>
                                        </Border>
                                        <Border x:Name="trayBorder" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="0,5,0,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}">
                                            <Grid>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="System Tray Icon" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                <Button Background="AntiqueWhite" x:Name="trayButt" HorizontalAlignment="Right" Width="15" Height="15" VerticalAlignment="Center" Margin="0,0,5,0" Click="ToggleTray" IsTabStop="False">
                                                    <Button.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="20"/>
                                                        </Style>
                                                    </Button.Resources>
                                                    <Button.Style>
                                                        <StaticResource ResourceKey="TogBut"/>
                                                    </Button.Style>
                                                </Button>
                                            </Grid>
                                        </Border>
                                        <Border x:Name="minTrayBorder" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="0,5,0,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}">
                                            <Grid>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="Minimise to System Tray" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                <Button Background="AntiqueWhite" x:Name="minTrayButt" HorizontalAlignment="Right" Width="15" Height="15" VerticalAlignment="Center" Margin="0,0,5,0" Click="ToggleMinTray" IsTabStop="False">
                                                    <Button.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="20"/>
                                                        </Style>
                                                    </Button.Resources>
                                                    <Button.Style>
                                                        <StaticResource ResourceKey="TogBut"/>
                                                    </Button.Style>
                                                </Button>
                                            </Grid>
                                        </Border>
                                        <TextBlock Foreground="{DynamicResource FgCol2}" Margin="15,3,20,0" Text="Other" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="13"/>
                                        <Border x:Name="OtherBorder" CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="0,1,0,0" Height="{Binding Source={StaticResource MinBoxHeight}}" Background="{DynamicResource BoxBack}">
                                            <Grid>
                                                <TextBlock Foreground="{DynamicResource FgCol1}" Text="Support the Developer" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                <Button x:Name="supportButt" Click="SupportLink" Background="{DynamicResource AcGrad}" Style="{StaticResource MyButton}" HorizontalAlignment="Right" BorderThickness="0" Margin="0,3,3,3" Width="130" FontSize="8" IsTabStop="False" Focusable="False">
                                                    <Button.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="5"/>
                                                        </Style>
                                                    </Button.Resources>
                                                    <TextBlock Text="Leave a Tip" FontFamily="./#LEMON MILK Pro FTR Regular" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource GradFG}" FontSize="14"/>
                                                </Button>
                                            </Grid>
                                        </Border>
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>

                        </Grid>
                        <Grid Margin="0,5,0,0">
                            <Button x:Name="settButt" Style="{StaticResource CustBut}" Click="SettingsToggle" Height="{Binding Source={StaticResource MajBoxHeight}}" Width="{Binding Source={StaticResource MajBoxHeight}}" HorizontalAlignment="Left" Background="{DynamicResource BoxBack}" BorderThickness="0" Margin="5,0,0,0" IsTabStop="False" Focusable="False">

                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="{Binding Source={StaticResource MinRad}}"/>
                                    </Style>
                                </Button.Resources>
                                <Button.Triggers>
                                    <EventTrigger RoutedEvent="Button.MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="settScale"
                                         Storyboard.TargetProperty="ScaleX" To="1.06" Duration="0:0:0.05" AccelerationRatio="0.1" DecelerationRatio="0.9"/>
                                                <DoubleAnimation Storyboard.TargetName="settScale"
                                         Storyboard.TargetProperty="ScaleY" To="1.06" Duration="0:0:0.05" AccelerationRatio="0.1" DecelerationRatio="0.9"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Button.MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="settScale"
                                         Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2" AccelerationRatio="0.3" DecelerationRatio="0.7"/>
                                                <DoubleAnimation Storyboard.TargetName="settScale"
                                         Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2" AccelerationRatio="0.3" DecelerationRatio="0.7" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Button.Triggers>

                                <Border Name="settIcon" Background="{DynamicResource FgCol1}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Width="28" Height="28">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="0" />
                                            <ScaleTransform x:Name="settScale" CenterY="0.5" CenterX="0.5"/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                    <Border.OpacityMask>
                                        <ImageBrush ImageSource="{DynamicResource SettingsDrawingImage}" Stretch="Uniform">
                                            <ImageBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <TranslateTransform X="0" Y="0"/>
                                                </TransformGroup>
                                            </ImageBrush.RelativeTransform>
                                        </ImageBrush>
                                    </Border.OpacityMask>
                                </Border>
                            </Button>
                            <Grid x:Name="activateButtGrid">
                                <Button Name="activateButt" Click="Activate" Background="{DynamicResource AcGrad}" Style="{StaticResource MyButton}" Height="{Binding Source={StaticResource MajBoxHeight}}" HorizontalAlignment="Stretch" BorderThickness="0" Margin="50,0,5,0" IsTabStop="False" Focusable="False">
                                    <Button.Resources>
                                        <Style TargetType="Border">
                                            <Setter Property="CornerRadius" Value="{Binding Source={StaticResource MinRad}}"/>
                                        </Style>
                                    </Button.Resources>
                                    <TextBlock Name="activateButtText" Text="Activate" FontFamily="./#LEMON MILK Pro FTR Medium" FontSize="35" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0" Foreground="{DynamicResource ActivateText}"/>
                                </Button>
                            </Grid>

                        </Grid>
                    </StackPanel>
                </Border>
                <Grid x:Name="welcomeGrid" Visibility="Collapsed">
                    <TextBlock Margin="0,65,0,0" Foreground="{DynamicResource FgCol1}" Text="Welcome to Clickett!" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="20" VerticalAlignment="Top" TextAlignment="Center" HorizontalAlignment="Center" Width="300" TextWrapping="WrapWithOverflow" LineStackingStrategy="BlockLineHeight" IsHitTestVisible="False"/>
                    <TextBlock Foreground="{DynamicResource FgCol2}" Margin="73,97,20,0" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="13" VerticalAlignment="Top" HorizontalAlignment="Left"><Run Language="en-gb" Text="Choose a theme"/></TextBlock>
                    <Border CornerRadius="{Binding Source={StaticResource MinRad}}" Margin="5,44,5,0" Height="42" Background="{DynamicResource BoxBack}" Width="375">
                        <Grid>
                            <StackPanel Orientation="Horizontal" Margin="5,0,5,0" HorizontalAlignment="Right">
                                <Button Name="DefaultThemeBuW" Background="#061010" Style="{StaticResource TogBut}" Click="SetTheme" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5">
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="16"/>
                                        </Style>
                                    </Button.Resources>
                                    <Border Background="#FF45B4B4" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                </Button>
                                <Button Name="DefaultLightThemeBuW" Background="#F8FFFF" Style="{StaticResource TogBut}" Click="SetTheme" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0">
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="16"/>
                                        </Style>
                                    </Button.Resources>
                                    <Border Background="#FF45B4B4" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                </Button>
                                <Button Name="ColdThemeBuW" Background="#22272c" Style="{StaticResource TogBut}" Click="SetTheme" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0">
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="16"/>
                                        </Style>
                                    </Button.Resources>
                                    <Border Background="#fcfbf8" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                </Button>
                                <Button Name="GreenThemeBuW" Background="#030303" Style="{StaticResource TogBut}" Click="SetTheme" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0">
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="16"/>
                                        </Style>
                                    </Button.Resources>
                                    <Border Background="#FF16D419" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                </Button>
                                <Button Name="DiscordThemeBuW" Background="#2f3136" Style="{StaticResource TogBut}" Click="SetTheme" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0">
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="16"/>
                                        </Style>
                                    </Button.Resources>
                                    <Image Source="res/Discord.png" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality"/>
                                </Button>
                                <Button Background="{DynamicResource Back}" Style="{StaticResource ColourButton}" Cursor="Arrow" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0" Opacity="0.3">
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="16"/>
                                        </Style>
                                    </Button.Resources>
                                    <Border Background="{DynamicResource BoxBack}" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                </Button>
                                <Button Background="{DynamicResource Back}" Style="{StaticResource ColourButton}" Cursor="Arrow" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0" Opacity="0.25">
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="16"/>
                                        </Style>
                                    </Button.Resources>
                                    <Border Background="{DynamicResource BoxBack}" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                </Button>
                                <Button Background="{DynamicResource Back}" Style="{StaticResource ColourButton}" Cursor="Arrow" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0" Opacity="0.2">
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="16"/>
                                        </Style>
                                    </Button.Resources>
                                    <Border Background="{DynamicResource BoxBack}" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                </Button>
                                <Button Background="{DynamicResource Back}" Style="{StaticResource ColourButton}" Cursor="Arrow" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0" Opacity="0.15">
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="16"/>
                                        </Style>
                                    </Button.Resources>
                                    <Border Background="{DynamicResource BoxBack}" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                </Button>
                                <Button Background="{DynamicResource Back}" Style="{StaticResource ColourButton}" Cursor="Arrow" Width="32" Height="32" VerticalAlignment="Center" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0" Opacity="0.1">
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="16"/>
                                        </Style>
                                    </Button.Resources>
                                    <Border Background="{DynamicResource BoxBack}" Width="16" Height="16" VerticalAlignment="Center" CornerRadius="17" HorizontalAlignment="Center"/>
                                </Button>
                            </StackPanel>
                            <TextBlock Foreground="{DynamicResource FgCol1}" Text="More coming soon!" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Opacity="0.5" Margin="209,0,0,0"/>
                        </Grid>
                    </Border>
                    <TextBlock Foreground="{DynamicResource FgCol2}" Margin="73,166,0,0" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="13" VerticalAlignment="Top" HorizontalAlignment="Left" Text="Wanna take a tour?"/>
                    <Button Click="AcceptTuto" Background="{DynamicResource BoxBack}" Style="{StaticResource MyButton}" HorizontalAlignment="Center" BorderThickness="0" IsTabStop="False" Focusable="False" Width="155" Height="22" VerticalAlignment="Top" Margin="0,190,160,0">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="{Binding Source={StaticResource MinRad}}"/>
                            </Style>
                        </Button.Resources>
                        <TextBlock FontFamily="./#LEMON MILK Pro FTR" FontSize="15" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource FgCol1}"><Run Text="Sure"/><Run Language="en-gb" Text=","/><Run Text=" lets go"/><Run Text="!"/></TextBlock>
                    </Button>
                    <Button Click="DenyTuto" Background="{DynamicResource BoxBack}" Style="{StaticResource MyButton}" HorizontalAlignment="Center" BorderThickness="0" IsTabStop="False" Focusable="False" Width="155" Height="22" VerticalAlignment="Top" Margin="160,190,0,0">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="{Binding Source={StaticResource MinRad}}"/>
                            </Style>
                        </Button.Resources>
                        <TextBlock FontFamily="./#LEMON MILK Pro FTR" FontSize="15" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource FgCol1}"><Run Text="No"/><Run Language="en-gb" Text=","/><Run Text=" I got this"/></TextBlock>
                    </Button>
                </Grid>
                <Grid Margin="0,60,0,0" x:Name="tutOverlay" Visibility="Collapsed">
                    <TextBlock x:Name="tutText" Margin="36,81,0,0" Foreground="{DynamicResource FgCol1}" Text="Choose what type of click will happen" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="15" VerticalAlignment="Top" TextAlignment="Center" HorizontalAlignment="Left" Width="300" TextWrapping="WrapWithOverflow" LineStackingStrategy="BlockLineHeight" IsHitTestVisible="False"/>
                    <Button x:Name="tutNextBut" Click="TutoNext" Background="{DynamicResource AcGrad}" HorizontalAlignment="Left" BorderThickness="0" Margin="213,140,0,0" Width="74" FontSize="8" IsTabStop="False" Focusable="False" Height="26" VerticalAlignment="Top">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="5"/>
                            </Style>
                        </Button.Resources>
                        <Button.Style>
                            <StaticResource ResourceKey="TogBut"/>
                        </Button.Style>
                        <TextBlock x:Name="tutNextButText" Text="Next" FontFamily="./#LEMON MILK Pro FTR Regular" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource GradFG}" FontSize="17"/>
                    </Button>
                    <Border x:Name="tutArrow" Background="{DynamicResource FgCol1}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="69" Height="69" Opacity="0.5" RenderOptions.BitmapScalingMode="HighQuality" IsHitTestVisible="False" RenderTransformOrigin="0.5,0.5" Margin="222,95,0,0">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="100"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Border.OpacityMask>
                            <ImageBrush ImageSource="{DynamicResource PointArrowDrawingImage}" Stretch="Uniform">
                                <ImageBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="-0.08"/>
                                    </TransformGroup>
                                </ImageBrush.RelativeTransform>
                            </ImageBrush>
                        </Border.OpacityMask>
                    </Border>
                    <Button x:Name="tutHelpPage" Click="HelpLink" Background="{DynamicResource BoxBack}" Style="{StaticResource MyButton}" HorizontalAlignment="Center" BorderThickness="0" IsTabStop="False" Focusable="False" Width="155" Height="22" VerticalAlignment="Top" Margin="0,105,160,0">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="{Binding Source={StaticResource MinRad}}"/>
                            </Style>
                        </Button.Resources>
                        <TextBlock Text="Help Page" FontFamily="./#LEMON MILK Pro FTR" FontSize="15" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource FgCol1}"/>
                    </Button>
                    <Button x:Name="tutContact" Click="HelpContact" Background="{DynamicResource BoxBack}" Style="{StaticResource MyButton}" HorizontalAlignment="Center" BorderThickness="0" IsTabStop="False" Focusable="False" Width="155" Height="22" VerticalAlignment="Top" Margin="160,105,0,0">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="{Binding Source={StaticResource MinRad}}"/>
                            </Style>
                        </Button.Resources>
                        <TextBlock Text="Contact" FontFamily="./#LEMON MILK Pro FTR" FontSize="15" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource FgCol1}"/>
                    </Button>
                    <TextBlock x:Name="tutTextOther" Margin="34,110,0,0" Foreground="{DynamicResource FgCol1}" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="15" VerticalAlignment="Top" TextAlignment="Center" HorizontalAlignment="Left" Width="186" TextWrapping="WrapWithOverflow" LineStackingStrategy="BlockLineHeight" IsHitTestVisible="False"><Run Language="en-gb" Text="Click the circle to turn it on or off"/></TextBlock>
                </Grid>
                <Grid x:Name="helpMenu" Margin="0,60,0,0" Visibility="Collapsed" Height="168" VerticalAlignment="Center">
                    <Button BorderBrush="Transparent" Background="Transparent" Click="HelpExit" Style="{StaticResource MyButton}" Cursor="Arrow"/>
                    <TextBlock Foreground="{DynamicResource FgCol2}" Margin="20,15,20,0" Text="Take a guide around Clickett" FontFamily="./#LEMON MILK Pro FTR Regular" FontSize="18" VerticalAlignment="Top" TextAlignment="Center" HorizontalAlignment="Center"/>
                    <Button Name="begTutButt" Click="StartTuto" Background="{DynamicResource AcGrad}" Style="{StaticResource TogBut}" HorizontalAlignment="Center" BorderThickness="0" IsTabStop="False" Focusable="False" Width="180" Height="30" VerticalAlignment="Top" Margin="0,50,0,0">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="{Binding Source={StaticResource MinRad}}"/>
                            </Style>
                        </Button.Resources>
                        <TextBlock Text="Start Tutorial" FontFamily="./#LEMON MILK Pro FTR Medium" FontSize="19" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource ActivateText}"/>
                    </Button>
                    <TextBlock Foreground="{DynamicResource FgCol2}" Margin="20,97,20,0" Text="More Help" FontFamily="./#LEMON MILK Pro FTR Medium" FontSize="13" VerticalAlignment="Top" TextAlignment="Center" HorizontalAlignment="Center"/>
                    <Button Click="HelpLink" Background="{DynamicResource BoxBack}" Style="{StaticResource MyButton}" HorizontalAlignment="Center" BorderThickness="0" IsTabStop="False" Focusable="False" Width="155" Height="22" VerticalAlignment="Top" Margin="0,123,160,0">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="{Binding Source={StaticResource MinRad}}"/>
                            </Style>
                        </Button.Resources>
                        <TextBlock Text="Help Page" FontFamily="./#LEMON MILK Pro FTR" FontSize="15" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource FgCol1}"/>
                    </Button>
                    <Button Click="HelpContact" Background="{DynamicResource BoxBack}" Style="{StaticResource MyButton}" HorizontalAlignment="Center" BorderThickness="0" IsTabStop="False" Focusable="False" Width="155" Height="22" VerticalAlignment="Top" Margin="160,123,0,0">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="{Binding Source={StaticResource MinRad}}"/>
                            </Style>
                        </Button.Resources>
                        <TextBlock Text="Contact" FontFamily="./#LEMON MILK Pro FTR" FontSize="15" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource FgCol1}"/>
                    </Button>
                    <Button Style="{StaticResource TogBut}" Click="HelpExit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="25" Height="25" Margin="62,15,0,0" BorderThickness="0" Background="#00DDDDDD" IsTabStop="False">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="20"/>
                            </Style>
                        </Button.Resources>
                        <Border Cursor="Hand" Background="{DynamicResource FgCol1}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="22" Height="22" Opacity="0.69" RenderOptions.BitmapScalingMode="HighQuality" Margin="0" IsHitTestVisible="False">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="{DynamicResource BackArrowDrawingImage}" Stretch="Uniform">
                                    <ImageBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0" CenterX="0"/>
                                            <TranslateTransform X="0" Y="-0.1"/>
                                        </TransformGroup>
                                    </ImageBrush.RelativeTransform>
                                </ImageBrush>
                            </Border.OpacityMask>
                        </Border>
                    </Button>
                </Grid>
                <Button x:Name="tutExitBut" Click="TutoExit" Visibility="Collapsed" Background="{DynamicResource BoxBack}" HorizontalAlignment="Right" BorderThickness="0" Margin="0,8,67,0" Width="80" FontSize="8" IsTabStop="False" Focusable="False" Height="16" VerticalAlignment="Top">
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </Button.Resources>
                    <Button.Style>
                        <StaticResource ResourceKey="MyButton"/>
                    </Button.Style>
                    <TextBlock Text="Exit Tutorial" FontFamily="./#LEMON MILK Pro FTR Regular" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource FgCol1}" FontSize="10"/>
                </Button>
                <Button x:Name="helpBut" Style="{StaticResource TogBut}" Click="Help" HorizontalAlignment="Right" VerticalAlignment="Top" Width="25" Height="25" Margin="0,3,61,0" BorderThickness="0" Background="#00DDDDDD" IsTabStop="False">
                    <Border Background="{DynamicResource FgCol1}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="18" Height="18" Opacity="0.3" RenderOptions.BitmapScalingMode="HighQuality">
                        <Border.OpacityMask>
                            <ImageBrush ImageSource="{DynamicResource helpDrawingImage}" Stretch="Uniform">
                                <ImageBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterY="0" CenterX="0"/>
                                        <TranslateTransform X="0" Y="-0.08"/>
                                    </TransformGroup>
                                </ImageBrush.RelativeTransform>
                            </ImageBrush>
                        </Border.OpacityMask>
                    </Border>
                </Button>
                <Button Style="{StaticResource TogBut}" Click="AppMin" HorizontalAlignment="Right" VerticalAlignment="Top" Width="25" Height="25" Margin="0,3,32,0" BorderThickness="0" Background="#00DDDDDD" IsTabStop="False">
                    <Border Background="{DynamicResource FgCol1}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="13" Height="13" Opacity="0.69" RenderOptions.BitmapScalingMode="HighQuality">
                        <Border.OpacityMask>
                            <ImageBrush ImageSource="{DynamicResource MinDrawingImage}" Stretch="Uniform">
                                <ImageBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterY="0" CenterX="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </ImageBrush.RelativeTransform>
                            </ImageBrush>
                        </Border.OpacityMask>
                    </Border>
                </Button>
                <Button Style="{StaticResource TogBut}" Click="AppClose" HorizontalAlignment="Right" VerticalAlignment="Top" Width="25" Height="25" Margin="0,3,3,0" BorderThickness="0" Background="#00DDDDDD" IsTabStop="False">
                    <Border Background="{DynamicResource FgCol1}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="13" Height="13" Opacity="0.69">
                        <Border.OpacityMask>
                            <ImageBrush ImageSource="{DynamicResource CloseDrawingImage}" Stretch="Uniform">
                                <ImageBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterY="0" CenterX="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </ImageBrush.RelativeTransform>
                            </ImageBrush>
                        </Border.OpacityMask>
                    </Border>
                </Button>
            </Grid>
        </Canvas>
    </Viewbox>
</Window>
